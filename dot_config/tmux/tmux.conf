set -g default-terminal screen-256color
set -ga terminal-overrides ",xterm-256color:Tc"

# bind Ctrl-j to prefix
set -g prefix C-j
# unbind default prefix
unbind C-b

# tmux.sensivle から流用
# フォーカスイベントを有効化
set -g focus-events on
# 異なるサイズの端末からアクセスしたときにリサイズ 
setw -g aggressive-resize on

set-window-option -g mode-keys vi
# ウィンドウ履歴の最大行数
set-option -g history-limit 50000
# メッセージ表示秒数
set-option -g display-time 2000
# キーストロークのディレイを減らす
set -sg escape-time 1
# ウィンドウのインデックスを1から始める
set -g base-index 1
set-option -g renumber-windows on
# ペインのインデックスを1から始める
setw -g pane-base-index 1

# ペインボーダーを設定する

set -g pane-border-status "top"
set -g pane-border-format "#P #{pane_current_command} #{pane_current_path}"
#set -g pane-border-format "#("$XDG_CONFIG_HOME/tmux/pane-border-format.bash")"

## 何か動きがあると表示
setw -g monitor-activity on
set -g status-position top

# press Ctrl-j*2 to send-prefix
bind C-j send-prefix
bind C-j last-window
# Reload config file
bind-key r source-file $XDG_CONFIG_HOME/tmux/tmux.conf\; display-message "[tmux] ${XDG_CONFIG_HOME}/tmux/tmux.conf"
bind-key C-r source-file $XDG_CONFIG_HOME/tmux/tmux.conf\; display-message "[tmux] ${XDG_CONFIG_HOME}/tmux/tmux.conf"
# Vimのキーバインドでペインを移動する
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-H previous-window
bind -n M-L next-window
bind -n C-M-h switch-client -p
bind -n C-M-l switch-client -n
# ウィンドウ選択
bind C-w choose-window
# select session/window/pane
bind -n M-a choose-tree
bind -n M-e choose-client
bind -n M-w choose-tree -w
# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# https://qiita.com/succi0303/items/cb396704493476373edfをコピペ
# レイアウトを次々切り替え
bind -r Space next-layout
# rotate処理
bind -r C-o rotate-window
# 画面分割系
# create new window
bind c new-window -c '#{pane_current_path}'
# split window
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
# lazygit
bind g popup -w90% -h90% -d '#{pane_current_path}' -E lazygit

# プラグインマネージャー
# tpm
setenv -g TMUX_PLUGIN_MANAGER_PATH "$XDG_DATA_HOME/tmux/plugins"
set -g @tpm-install I
set -g @tpm-update u
set -g @tpm-clean U
set -g @plugin 'tmux-plugins/tpm'


# dracula main option
set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-border-contrast true
set -g @dracula-plugins "git time"
set -g @dracula-show-left-icon "session"
set -g @dracula-military-time true
set -g @dracula-show-fahrenheit false
set -g @dracula-show-location false
# dracula git option
set -g @dracula-git-show-current-symbol "🙆‍♂️"
set -g @dracula-git-no-repo-message "😁"
set -g @dracula-git-show-diff-symbol "❗️"
set -g @plugin 'dracula/tmux'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_empty_has_affixes 'on' # default is 'off'
set -g @prefix_highlight_empty_prompt 'Tmux'
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'


if 'test ! -d "$TMUX_PLUGIN_MANAGER_PATH/tpm"' 'run "git clone https://github.com/tmux-plugins/tpm "$TMUX_PLUGIN_MANAGER_PATH/tpm" && echo "$TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins"'
# 初回のみsetenvで設定した変数が使えないため直書きで対応
run "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"
